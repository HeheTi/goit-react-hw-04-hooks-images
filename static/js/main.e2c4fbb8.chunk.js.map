{"version":3,"sources":["components/LoaderModal/LoaderModal.module.css","components/LoaderModal/LoaderModal.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","api/api.js","components/App/App.jsx","index.js"],"names":["module","exports","loaderRef","document","querySelector","LoaderModal","createPortal","className","s","loader","type","color","height","width","timeout","Searchbar","state","serchName","onChangeSerchName","e","setState","target","value","onSubmitForm","preventDefault","props","onSubmit","resetForm","this","autoComplete","autoFocus","onChange","placeholder","Component","ImageGalleryItem","srcImg","tags","onClick","src","alt","ImageGallery","pictures","onClickImage","map","webformatURL","largeImageURL","modalRef","Modal","onclickBackdrop","currentTarget","onCloseModal","onEscPress","code","window","addEventListener","removeEventListener","data","bigImg","Button","BASE_URL","API_KEY","process","fetchImagesApi","page","url","fetch","then","response","ok","json","Promise","reject","Error","App","dataModal","serchD","isLoading","isModalOpen","isShowBtn","perPage","fetchImages","serch","totalHits","hits","totalPages","Math","ceil","normalizeDate","toast","info","autoClose","success","prevState","delay","catch","err","error","message","finally","onenModal","onTakeBigPict","onLoadMore","onTakeDataForSerch","name","warn","provProps","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e2c4fbb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"LoaderModal_loader__2n25p\"};","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport s from './LoaderModal.module.css';\n\nconst loaderRef = document.querySelector('#loader-root');\n\nconst LoaderModal = () => {\n  return createPortal(\n    <div className={s.loader}>\n      <Loader\n        type=\"Oval\"\n        color=\"#3f51b5\"\n        height={120}\n        width={120}\n        timeout={0}\n      />\n    </div>,\n    loaderRef,\n  );\n};\n\nexport default LoaderModal;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n  state = {\n    serchName: '',\n  };\n\n  onChangeSerchName = e => this.setState({ serchName: e.target.value });\n\n  onSubmitForm = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.serchName);\n    this.resetForm();\n  };\n\n  resetForm = () => this.setState({ serchName: '' });\n\n  render() {\n    const { serchName } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.onSubmitForm} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            onChange={this.onChangeSerchName}\n            placeholder=\"Search images and photos\"\n            value={serchName}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ srcImg, tags, onClick }) => {\n  return (\n    <li onClick={onClick} className=\"ImageGalleryItem\">\n      <img className=\"ImageGalleryItem-image\" src={srcImg} alt={tags} />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  srcImg: PropTypes.string,\n  tags: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem';\n\nconst ImageGallery = ({ pictures, onClickImage }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {pictures.map(({ webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={webformatURL}\n          onClick={() => onClickImage(largeImageURL, tags)}\n          srcImg={webformatURL}\n          tags={tags}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  pictures: PropTypes.array,\n  onClickImage: PropTypes.func,\n};\n\nexport default ImageGallery;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport PropTypes from 'prop-types';\n\nconst modalRef = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.onEscPress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onEscPress);\n  }\n\n  onclickBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onCloseModal();\n    }\n  };\n\n  onEscPress = e => {\n    if (e.code === 'Escape') {\n      this.props.onCloseModal();\n    }\n  };\n\n  render() {\n    const {\n      data: { bigImg, tags },\n    } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.onclickBackdrop}>\n        <div className=\"modal\">\n          <img src={bigImg} alt={tags} />\n        </div>\n      </div>,\n      modalRef,\n    );\n  }\n}\n\nModal.propTypes = {\n  bigImg: PropTypes.string,\n  tags: PropTypes.string,\n};\n\nexport default Modal;\n","import PropTypes from 'prop-types';\n\nfunction Button({ onClick }) {\n  return (\n    <button onClick={onClick} className=\"Button\">\n      Load more\n    </button>\n  );\n}\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","const BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nfunction fetchImagesApi(serchName, page = 1) {\n  const url = `${BASE_URL}?q=${serchName}&key=${API_KEY}&page=${page}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error(`Something went wrong`));\n  });\n}\n\nexport { fetchImagesApi };\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport LoaderModal from '../LoaderModal/LoaderModal';\nimport Searchbar from '../Searchbar';\nimport ImageGallery from '../ImageGallery';\nimport Modal from '../Modal';\nimport Button from '../Button';\nimport { fetchImagesApi } from '../../api/api.js';\n\nclass App extends Component {\n  state = {\n    pictures: [],\n    dataModal: null,\n    serchD: 'nature',\n    isLoading: false,\n    isModalOpen: false,\n    page: 1,\n    isShowBtn: false,\n  };\n\n  perPage = 12;\n\n  componentDidMount() {\n    const { serchD, page } = this.state;\n    this.setState({ isLoading: true });\n    this.fetchImages(serchD, page);\n  }\n\n  componentDidUpdate(provProps, prevState) {\n    const { serchD, page } = this.state;\n\n    if (prevState.page !== page || prevState.serchD !== serchD) {\n      this.fetchImages(serchD, page);\n    }\n  }\n\n  fetchImages = (serch, page) => {\n    fetchImagesApi(serch, page)\n      .then(({ totalHits, hits }) => {\n        const totalPages = Math.ceil(totalHits / this.perPage);\n\n        const normalizeDate = hits.map(\n          ({ webformatURL, largeImageURL, tags }) => ({\n            webformatURL,\n            largeImageURL,\n            tags,\n          }),\n        );\n\n        if (totalHits < 1) {\n          toast.info(`Sorry, no picture about ${serch}`, { autoClose: 2500 });\n        }\n\n        if (totalHits > 0 && page === 1) {\n          toast.success(`Found picture about ${serch ? serch : 'everithing'}`, {\n            autoClose: 2500,\n          });\n        }\n\n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...normalizeDate],\n        }));\n\n        if (totalPages > 1) {\n          this.setState({ isShowBtn: true });\n        }\n\n        if (totalPages === this.state.page) {\n          toast.info(`Dont have more picture about ${serch}`, {\n            autoClose: 2500,\n            delay: 1500,\n          });\n          this.setState({ isShowBtn: false });\n          return false;\n        }\n      })\n      .catch(err => toast.error(err.message, { autoClose: 2500 }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  onenModal = () => this.setState({ isModalOpen: true });\n  onCloseModal = () => this.setState({ isModalOpen: false, dataModal: null });\n\n  onTakeBigPict = (bigImg, tags) => {\n    this.setState({ dataModal: { bigImg, tags } });\n    this.onenModal();\n  };\n\n  onLoadMore = () => {\n    toast.info(\n      `Uploading more pictures about ${\n        this.state.serchD ? this.state.serchD : 'everything '\n      }  ♥`,\n      { autoClose: 1500 },\n    );\n\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n      isLoading: true,\n    }));\n  };\n\n  onTakeDataForSerch = name => {\n    const { serchD } = this.state;\n    if (serchD === name) {\n      toast.warn(\n        `You look picture  about ${\n          serchD ? serchD : 'everything'\n        } now ;) Search something else!`,\n        { autoClose: 3000 },\n      );\n      return false;\n    }\n\n    return this.setState({\n      serchD: name,\n      page: 1,\n      pictures: [],\n      isShowBtn: false,\n      isLoading: true,\n    });\n  };\n\n  render() {\n    const { pictures, isLoading, isModalOpen, dataModal, isShowBtn } =\n      this.state;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onTakeDataForSerch} />\n\n        {isLoading && <LoaderModal />}\n\n        {pictures.length > 0 && (\n          <ImageGallery pictures={pictures} onClickImage={this.onTakeBigPict} />\n        )}\n\n        {isModalOpen && (\n          <Modal data={dataModal} onCloseModal={this.onCloseModal} />\n        )}\n\n        {isShowBtn && <Button onClick={this.onLoadMore} />}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}